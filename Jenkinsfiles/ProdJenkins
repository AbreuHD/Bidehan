pipeline {
        agent { label 'Africa' }
    environment {
        NUGET_API_KEY = credentials('nuget_api_key')
        NUGET_SERVER_URL = credentials('nuget_uri')
    }

    stages {

        stage('Prepare environment') {
            steps {
                script {
                    sh 'nuget help || echo "NuGet CLI is not installed. Be sure to install it."'
                }
            }
        }

        stage('Restore dependencies') {
            steps {
                echo 'Restoring project dependencies...'
                sh 'dotnet restore Bidehan.sln'
            }
        }
        stage('Create NuGet package') {
            steps {
                echo 'Packing the project...'
                // Empaquetar el proyecto con dotnet
                sh 'dotnet pack Application/Application.csproj --configuration Release --output ./nupkgs'
            }
        }
        stage('Publish NuGet package') {
            steps {
                echo 'Uploading NuGet package to the repository...'
                // Subir el paquete con dotnet
                sh '''
                dotnet nuget push ./nupkgs/*.nupkg \
                    --source $NUGET_API_SOURCE \
                    --api-key $NUGET_URI
                '''
            }
        }
    }

    post {
        success {
            echo 'Pipeline completed successfully. The package has been released.'
        }
        failure {
            echo 'Pipeline failed. Check for errors in the console.'
        }
    }
}
